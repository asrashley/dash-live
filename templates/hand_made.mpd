<?xml version="1.0" encoding="UTF-8"?>
<MPD xmlns="urn:mpeg:dash:schema:mpd:2011"
     xmlns:cenc="urn:mpeg:cenc:2013"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="urn:mpeg:dash:schema:mpd:2011 DASH-MPD.xsd"
     publishTime="{{publishTime|isoDateTime}}"
  {%- if mode=='live' %}
    type="dynamic"
    {%- if minimumUpdatePeriod %}
    minimumUpdatePeriod="{{minimumUpdatePeriod|isoDuration}}"
    {%- endif %}
    {%- if suggestedPresentationDelay %}
    suggestedPresentationDelay="{{suggestedPresentationDelay|isoDuration}}"
    {%- endif %}
    {%- if availabilityStartTime %}
    availabilityStartTime="{{availabilityStartTime|isoDateTime}}"
    {%- endif %}
    {%- if timeShiftBufferDepth %}
    timeShiftBufferDepth="{{timeShiftBufferDepth|isoDuration}}"
    {%- endif %}
  {%- else %}
    type="static"
  {%- endif %}
  {%- if mode=='odvod' %}
    profiles="urn:mpeg:dash:profile:isoff-on-demand:2011"
  {%- else %}
    profiles="urn:mpeg:dash:profile:isoff-live:2011,urn:dvb:dash:profile:dvbdash:2014"
  {%- endif %}
  {%- if mode!='live' %}
    mediaPresentationDuration="{{mediaDuration|isoDuration}}"
  {%- endif %}
  minBufferTime="{{minBufferTime|isoDuration}}"
>
 <ProgramInformation>
  <Title>{{title}}</Title>
 </ProgramInformation>
 <Location>{{request_uri|xmlSafe}}</Location>
 {%- if mode=='live' %}<UTCTiming schemeIdUri="{{timeSource.method}}"
 value="{{timeSource.url}}"/>{% endif %}
 {%- for period in periods %}
   <Period
     start="{{period.start|isoDuration}}"
     id="{{period.id}}"
     {%- if period.duration %}duration="{{period.duration|isoDuration}}"{% endif %}
   >
     {%- if baseURL %}<BaseURL>{{baseURL}}</BaseURL>{% endif %}
     {% include "events/period.xml" %}
     {%- for adp in period.adaptationSets %}
       <AdaptationSet
         mimeType="{{adp.mimeType}}"
         contentType="{{adp.contentType}}"
         segmentAlignment="{{adp.segmentAlignment|trueFalse}}"
         startWithSAP="{{adp.startWithSAP}}"
         {%- if adp.contentType == "video" %}
           maxWidth="{{adp.maxWidth}}"
           maxHeight="{{adp.maxHeight}}"
           maxFrameRate="{{adp.maxFrameRate}}"
           par="{{adp.par}}"
         {%- elif adp.contentType == "audio" %}
           lang="{{adp.language}}"
         {%- endif %}
         >
         {% include "events/adaptationset.xml" %}
         <ContentComponent
             id="{{adp.contentComponent.id}}"
             contentType="{{adp.contentComponent.contentType}}"
             />
         {%- if adp.role %}
           <Role
             schemeIdUri="urn:mpeg:dash:role:2011"
             value="{{adp.role}}"
           />
         {%- endif %}
         {%- for rep in adp.representations %}
           {%- if loop.first %}
             {% include "drm/template.xml" %}
             {%- if mode=='odvod' %}
               <SegmentTemplate timescale="{{adp.timescale}}">
                 {{generateSegmentTimeline(rep)}}
               </SegmentTemplate>
             {%- else %}
               <SegmentTemplate
                   startNumber="{{adp.startNumber}}"
                   timescale="{{adp.timescale}}"
                   duration="{{rep.segment_duration}}"
                   initialization="{{adp.initURL|xmlSafe}}"
                   media="{{adp.mediaURL|xmlSafe}}" />
             {%- endif %}
           {%- endif %}
           <Representation
               id="{{rep.id}}"
               mimeType="{{adp.mimeType}}"
               codecs="{{rep.codecs}}"
               {%- if adp.contentType == "video" %}
                 width="{{rep.width}}"
                 height="{{rep.height}}"
               {%- elif adp.contentType == "audio" %}
                   sampleRate="{{adp.sampleRate}}"
                   numChannels="{{adp.numChannels}}"
                   lang="{{adp.lang}}"
               {%- endif %}
               startWithSAP="{{rep.startWithSAP}}"
               bandwidth="{{rep.bitrate}}"
           >
             {%- if mode=='odvod' %}
               <BaseURL>{{adp.mediaURL.replace("$RepresentationID$", rep.id)|xmlSafe}}</BaseURL>
               {{generateSegmentList(rep)}}
             {%- endif %}
           </Representation>
         {%- endfor %} {# representations #}
       </AdaptationSet>
     {%- endfor %} {# adaptationSets #}
   </Period>
 {%- endfor %} {# periods #}
</MPD>
