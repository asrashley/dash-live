<?xml version="1.0" encoding="utf-8"?>
<MPD
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="urn:mpeg:dash:schema:mpd:2011"
  xsi:schemaLocation="urn:mpeg:dash:schema:mpd:2011 http://standards.iso.org/ittf/PubliclyAvailableStandards/MPEG-DASH_schema_files/DASH-MPD.xsd"
  {%- if mode=='live' %}
  type="dynamic"
  availabilityStartTime="{{ mpd.availabilityStartTime|isoDateTime }}"
  {%- if mpd.minimumUpdatePeriod %}
  minimumUpdatePeriod="{{ mpd.minimumUpdatePeriod|isoDuration }}"
  {%- endif %}
  timeShiftBufferDepth="{{ mpd.timeShiftBufferDepth|isoDuration }}"
  {% else %}
  type="static"
  mediaPresentationDuration="{{ mpd.mediaDuration|isoDuration }}"
  {%- endif %}  
  publishTime="{{ mpd.publishTime|isoDateTime }}"
  maxSegmentDuration="{{ mpd.maxSegmentDuration|isoDuration }}"
  minBufferTime="PT10S"
  profiles="urn:mpeg:dash:profile:isoff-live:2011,urn:com:dashif:dash264,urn:hbbtv:dash:profile:isoff-live:2012">
  <Period
    id="1"
    start="PT0S">
    {% if mpd.period.baseURL %}<BaseURL>{{ mpd.period.baseURL }}</BaseURL>{% endif %}
    <AdaptationSet
      group="2"
      mimeType="video/mp4"
      par="16:9"
      minBandwidth="{{mpd.video.minBitrate}}"
      maxBandwidth="{{mpd.video.maxBitrate}}"
      minWidth="{{mpd.video.minWidth}}"
      maxWidth="{{mpd.video.maxWidth}}"
      minHeight="{{mpd.video.minHeight}}"
      maxHeight="{{mpd.video.maxHeight}}"
      segmentAlignment="true"
      startWithSAP="1">
      {% for rep in mpd.video.representations %}
      {% if loop.first %}
      <SegmentTemplate timescale="{{rep.timescale}}"
              initialization="{{mpd.video.initURL|xmlSafe}}"
              media="{{mpd.video.mediaURL|xmlSafe}}">
        {% include "segment/timeline.xml" %}
      </SegmentTemplate>
        {% endif %}
        <Representation
          id="{{rep.id}}"
          mimeType="video/mp4"
          bandwidth="{{rep.bitrate}}"
          codecs="{{rep.codecs}}"
          width="{{rep.width}}"
          height="{{rep.height}}"
          frameRate="{{ rep.frameRate | frameRateFraction }}">
        </Representation>
      {% endfor %}
    </AdaptationSet>
    {% for audio in mpd.audio_sets %}
    <AdaptationSet
	id="{{ audio.id }}"
	group="2"
	mimeType="audio/mp4"
	minBandwidth="{{audio.minBitrate}}"
	maxBandwidth="{{audio.maxBitrate}}"
	segmentAlignment="true"
	startWithSAP="1">
	{%- for rep in audio.representations %}
      {%- if loop.first %}
        <SegmentTemplate timescale="{{audio.timescale}}"
                         initialization="{{audio.initURL|xmlSafe}}"
                         media="{{audio.mediaURL|xmlSafe}}">
          {% include "segment/timeline.xml" %}
        </SegmentTemplate>
        {%- endif %}
        <Representation
          id="{{rep.id}}"
          mimeType="audio/mp4"
          bandwidth="{{rep.bitrate}}"
          codecs="{{rep.codecs}}"
          sampleRate="{{rep.sampleRate}}"
          numChannels="{{rep.numChannels}}"
          lang="{{rep.language}}"
        >
        </Representation>
	{% endfor %}
        </AdaptationSet>
      {% endfor %}
  </Period>
</MPD>
